// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  firstName      String?   @map("first_name")
  lastName       String?   @map("last_name")
  identityNumber String?   @map("identity_number")
  profileImage   String?   @map("profile_image")
  role           Role      @default(USER)
  posts          Post[]
  comments       Comment[]

  @@map("user")
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  updatedAt  DateTime  @updatedAt @map("updated_at")
  createdAt  DateTime  @default(now()) @map("created_at")
  userId     Int       @map("user_id")
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  categoryId Int       @map("category_id")
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  comments   Comment[]
  tags       Tag[]

  @@map("post")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  updatedAt DateTime @updatedAt @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")
  postId    Int      @map("post_id")
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("comment")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]

  @@map("category")
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  count Int    @default(1)
  posts Post[]

  @@map("tag")
}
